# -*- coding: utf-8 -*-
"""
Created on Tue Mar 20 11:46:21 2018

@author: Anna
"""

DD={11: 1, 12: 2, 33: 3, 34: 4, 77: 5, 106: 6, 47: 7, 51: 8, 71: 9, 39: 10, 37: 11, 38: 12, 40: 13, 41: 14, 42: 15, 43: 16, 44: 17, 45: 18, 46: 19, 48: 20, 49: 21, 50: 22, 52: 23, 53: 24, 54: 25, 136: 26, 137: 27, 232: 28, 138: 29, 180: 30, 10: 31, 177: 32, 178: 33, 179: 34, 133: 35, 1: 36, 26: 37, 189: 38, 72: 39, 2: 40, 134: 41, 187: 42, 188: 43, 13: 44, 181: 45, 182: 46, 183: 47, 184: 48, 185: 49, 186: 50, 216: 51, 217: 52, 218: 53, 219: 54, 220: 55, 221: 56, 222: 57, 223: 58, 224: 59, 225: 60, 226: 61, 227: 62, 228: 63, 229: 64, 230: 65, 231: 66, 193: 67, 194: 68, 195: 69, 196: 70, 197: 71, 198: 72, 199: 73, 200: 74, 201: 75, 202: 76, 203: 77, 204: 78, 205: 79, 206: 80, 207: 81, 190: 82, 233: 83, 234: 84, 235: 85, 236: 86, 208: 87, 209: 88, 210: 89, 211: 90, 212: 91, 213: 92, 214: 93, 215: 94, 15: 95, 16: 96, 17: 97, 18: 98, 19: 99, 20: 100, 21: 101, 14: 102, 22: 103, 23: 104, 24: 105, 25: 106, 69: 107, 70: 108, 68: 109, 55: 110, 56: 111, 57: 112, 65: 113, 66: 114, 58: 115, 59: 116, 60: 117, 64: 118, 67: 119, 27: 120, 61: 121, 62: 122, 63: 123, 30: 124, 31: 125, 32: 126, 35: 127, 36: 128, 28: 129, 29: 130, 139: 131, 140: 132, 141: 133, 135: 134, 142: 135, 3: 136, 165: 137, 166: 138, 237: 139, 238: 140, 144: 141, 4: 142, 82: 143, 83: 144, 84: 145, 8: 146, 9: 147, 79: 148, 95: 149, 76: 150, 74: 151, 75: 152, 105: 153, 80: 154, 97: 155, 99: 156, 92: 157, 93: 158, 94: 159, 96: 160, 98: 161, 192: 162, 100: 163, 101: 164, 109: 165, 111: 166, 112: 167, 113: 168, 114: 169, 115: 170, 116: 171, 117: 172, 118: 173, 126: 174, 119: 175, 120: 176, 121: 177, 122: 178, 123: 179, 124: 180, 125: 181, 110: 182, 104: 183, 107: 184, 108: 185, 239: 186, 240: 187, 168: 188, 169: 189, 171: 190, 172: 191, 191: 192, 248: 193, 249: 194, 250: 195, 251: 196, 241: 197, 242: 198, 243: 199, 244: 200, 245: 201, 246: 202, 247: 203, 129: 204, 132: 205, 78: 206, 131: 207, 130: 208, 73: 209, 127: 210, 128: 211, 103: 212, 102: 213, 252: 214, 81: 215, 253: 216, 254: 217, 255: 218, 256: 219, 89: 220, 86: 221, 87: 222, 85: 223, 88: 224, 90: 225, 91: 226, 150: 227, 161: 228, 159: 229, 149: 230, 151: 231, 143: 232, 160: 233, 173: 234, 145: 235, 146: 236, 147: 237, 152: 238, 153: 239, 154: 240, 155: 241, 156: 242, 157: 243, 158: 244, 174: 245, 175: 246, 176: 247, 148: 248, 170: 249, 163: 250, 164: 251, 162: 252, 259: 253, 260: 254, 261: 255, 262: 256, 266: 257, 267: 258, 263: 259, 265: 260, 264: 261, 278: 262, 279: 263, 280: 264, 268: 265, 282: 266, 283: 267, 270: 268, 271: 269, 277: 270, 272: 271, 273: 272, 269: 273, 281: 274, 276: 275, 274: 276, 275: 277, 167: 278, 257: 279, 258: 280, 5: 281, 6: 282, 7: 283, 284: 284, 285: 285, 286: 286, 287: 287, 288: 288, 289: 289, 290: 290}

NEW=[]
OLD=[]
D={}

for i in range(1,291):
    NEW.append(i)
#print(len(NEW))

for i in range(5,14):
    OLD.append(i)
for i in range(30,311):
    OLD.append(i)
#print(len(OLD))
    
for i in OLD:
    D[i]=NEW[OLD.index(i)]
#print(D)

for j in D:
    if D[j] not in DD:
        print(D[j])
print('full success!!')
        
